meta {
  name: Get Public Servant Token
  type: http
  seq: 1
}

post {
  url: {{logtoApiUrl}}/oidc/token
  body: formUrlEncoded
  auth: none
}

headers {
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic {{process.env.BRUNO_PS_BASIC_M2M_TOKEN}}
}

body:form-urlencoded {
  grant_type: client_credentials
  scope: {{scopes}}
  organization_id: first-testing
}

vars:pre-request {
  scopes: messaging:message:* profile:user:read messaging:provider:* messaging:event:read messaging:citizen:* messaging:template:* upload:file:*
}

vars:post-response {
  accessToken: res.body.access_token
}

assert {
  res.status: eq 200
  res.body.access_token: isDefined
}

tests {
  test("returned scopes are the expected ones", function() {
      const data = res.getBody().scope;
  
      const requestScopes = bru.getVar("scopes").split(" ")
        .sort()
        .join(",")
      
      const responseScopes = data.split(" ")
        .sort()
        .join(",")
      expect(responseScopes).to.equal(requestScopes);
    });
}
