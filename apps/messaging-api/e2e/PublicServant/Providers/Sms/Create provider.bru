meta {
  name: Create provider
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/api/v1/providers
  body: json
  auth: bearer
}

auth:bearer {
  token: {{accessToken}}
}

vars:pre-request {
  randomStringSms: null
}

vars:post-response {
  smsProviderId: res.body.data.id
}

script:pre-request {
  const uuid = require("uuid")
  const next = uuid.v4()
  bru.setVar("randomStringSms", next)
  console.log("potatis arne", next)
  req.setBody({
    "type":"sms",
    "isPrimary":true,
    "providerName": next,
    "config":{
      "type":"AWS",
      "accessKey":"key",
      "secretAccessKey":"secret",
      "region":"region"
    }
  })
}

tests {
  test("should return uuid id", function(){
    const body = res.getBody()
    expect(body.data.id).to.match(/^[0-9A-F]{8}-[0-9A-F]{4}-[4][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i)
  })
}
