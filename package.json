{
  "name": "ogcio",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "version": "0.0.1",
  "description": "",
  "engines": {
    "node": ">=20.0.0"
  },
  "scripts": {    
    "init:logto": "node scripts/init-logto.mjs",
    "stop:logto": "node scripts/stop-logto.mjs",
    "start:services": "concurrently --kill-others \"npm run dev --workspace=auth-service\" \"npm run dev --workspace=mock-api\" \"npm run dev --workspace=web\" \"npm run dev --workspace=payments\" \"npm run dev --workspace=messaging\" \"npm run dev --workspace=payments-api\" \"npm run dev --workspace=profile\" \"npm run dev --workspace=messaging-api\" \"npm run dev --workspace=profile-api\"  \"npm run dev --workspace=timeline-api\" \"npm run dev --workspace=home\" \"npm run dev --workspace=forms\"",
    "start:docker": "docker-compose down && DOCKER_BUILDKIT=1 docker-compose up --build --remove-orphans -d --wait",
    "start:docker-no-scheduler": "docker-compose -f docker-compose-no-scheduler.yaml down && DOCKER_BUILDKIT=1 docker-compose -f docker-compose-no-scheduler.yaml up --build --remove-orphans -d --wait",
    "stop:docker": "docker-compose down",
    "start": "npm run init && npm run start:docker && concurrently \"npm run start:services\" \"sleep 5 && npm run migrate\"",
    "start:no-scheduler": "npm run init && npm run start:docker-no-scheduler && concurrently \"npm run start:services\" \"sleep 5 && npm run migrate\"",
    "reset-docker": "docker-compose down && docker system prune -a -f && docker builder prune -f && docker image prune -f",
    "test": "echo \"Error: no test specified\" && exit 1",
    "prepare": "(command -v husky && husky) || true",
    "start:docs": "cd documentation && npm run start",
    "kill-services": "sudo lsof -ti:8000,8001,8002,8003,8004,3000,3001,3002,3003,3004,3005,3006 | xargs sudo kill -9"
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2",
    "nodemon": "^3.1.0",
    "prettier": "^3.2.5"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,css,scss}": [
      "prettier --write"
    ]
  }
}
