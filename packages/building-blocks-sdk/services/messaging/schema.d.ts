/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/messages/": {
    /** @description Returns all the messages for the requested organisation or the requested recipient */
    get: {
      parameters: {
        query?: {
          status?: "delivered";
          /** @description Either recipientUserId and organisationId are mandatory */
          recipientUserId?: string;
          /** @description Either recipientUserId and organisationId are mandatory */
          organisationId?: string;
          offset?: number;
          limit?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** @description Unique Id of the message */
                id: string;
                /** @description Subject */
                subject: string;
                /** @description Creation date time */
                createdAt: string;
                /** @description Thread Name used to group messages */
                threadName: string;
                /** @description Organisation sender id */
                organisationId: string;
                /** @description Unique id of the recipient */
                recipientUserId: string;
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    /** @description Creates a message */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** @description The list of the preferred transports to use. If the selected transports are not available for the recipient, others will be used */
            preferredTransports: ("sms" | "email" | "lifeEvent")[];
            /** @description Unique user id of the recipient */
            recipientUserId: string;
            /**
             * @default public
             * @enum {string}
             */
            security: "confidential" | "public";
            /**
             * @description If true, the message will be sent even if the recipient didn't accept the organisation's invitation
             * @default false
             */
            bypassConsent: boolean;
            /**
             * Format: date-time
             * @description Date and time of when schedule the message
             */
            scheduleAt: string;
            message: {
              /** @description Thread Name used to group messages */
              threadName?: string;
              /** @description Subject. This is the only part that will be seen outside of the messaging platform is security is 'confidential' */
              subject: string;
              /** @description Brief description of the message */
              excerpt: string;
              /** @description Plain text version of the message */
              plainText: string;
              /** @description Rich text version of the message */
              richText: string;
              /** @description Language used to send the message */
              lang: string;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              data: {
                /**
                 * Format: uuid
                 * @description The unique id of the created message
                 */
                id: string;
              };
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/messages/{messageId}": {
    /** @description Returns the requested message */
    get: {
      parameters: {
        path: {
          /** @description The requested message unique id */
          messageId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** @description Subject. This is the only part that will be seen outside of the messaging platform is security is 'confidential' */
                subject: string;
                /** @description Creation date time */
                createdAt: string;
                /** @description Thread Name used to group messages */
                threadName: string;
                /** @description Organisation sender id */
                organisationId: string;
                /** @description Unique id of the recipient */
                recipientUserId: string;
                /** @description Brief description of the message */
                excerpt: string;
                /** @description Plain text version of the message */
                plainText: string;
                /** @description Rich text version of the message */
                richText: string;
                /** @description True if the message has already been seen by the recipient */
                isSeen: boolean;
                /**
                 * @default public
                 * @enum {string}
                 */
                security: "confidential" | "public";
              };
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/providers/": {
    /** @description Returns the providers with the requested properties */
    get: {
      parameters: {
        query: {
          /** @description If set, returns only the primary providers if true, otherwise the non-primary ones */
          primary?: boolean;
          type: "sms" | "email";
          offset?: number;
          limit?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                id: string;
                providerName: string;
                isPrimary: boolean;
                /** @enum {string} */
                type: "sms" | "email";
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    /** @description Creates a new provider */
    post: {
      requestBody?: {
        content: {
          "application/json":
            | {
                providerName: string;
                isPrimary: boolean;
                /** @enum {string} */
                type: "email";
                smtpHost: string;
                smtpPort: number;
                username: string;
                password: string;
                throttle?: number;
                fromAddress: string;
                ssl: boolean;
              }
            | {
                providerName: string;
                isPrimary: boolean;
                /** @enum {string} */
                type: "sms";
                config: {
                  /** @enum {string} */
                  type: "AWS";
                  accessKey: string;
                  secretAccessKey: string;
                  region: string;
                };
              };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                id: string;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/providers/{providerId}": {
    /** @description Returns the requested provider */
    get: {
      parameters: {
        query: {
          type: "sms" | "email";
        };
        path: {
          /** @description The unique id of the requested provider */
          providerId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data:
                | {
                    /** Format: uuid */
                    id: string;
                    providerName: string;
                    isPrimary: boolean;
                    /** @enum {string} */
                    type: "email";
                    smtpHost: string;
                    smtpPort: number;
                    username: string;
                    password: string;
                    throttle?: number;
                    fromAddress: string;
                    ssl: boolean;
                  }
                | {
                    /** Format: uuid */
                    id: string;
                    providerName: string;
                    isPrimary: boolean;
                    /** @enum {string} */
                    type: "sms";
                    config: {
                      /** @enum {string} */
                      type: "AWS";
                      accessKey: string;
                      secretAccessKey: string;
                      region: string;
                    };
                  };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          providerId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json":
            | {
                /** Format: uuid */
                id: string;
                providerName: string;
                isPrimary: boolean;
                /** @enum {string} */
                type: "email";
                smtpHost: string;
                smtpPort: number;
                username: string;
                password: string;
                throttle?: number;
                fromAddress: string;
                ssl: boolean;
              }
            | {
                /** Format: uuid */
                id: string;
                providerName: string;
                isPrimary: boolean;
                /** @enum {string} */
                type: "sms";
                config: {
                  /** @enum {string} */
                  type: "AWS";
                  accessKey: string;
                  secretAccessKey: string;
                  region: string;
                };
              };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          providerId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/templates/": {
    get: {
      parameters: {
        query?: {
          lang?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                templateMetaId: string;
                contents: {
                  lang: string;
                  templateName: string;
                }[];
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            contents: {
              templateName: string;
              lang: string;
              subject: string;
              excerpt: string;
              plainText: string;
              richText: string;
            }[];
            variables: {
              name: string;
              type: string;
              languages: string[];
            }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                id: string;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/templates/{templateId}": {
    get: {
      parameters: {
        path: {
          templateId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                contents: {
                  templateName: string;
                  subject: string;
                  excerpt: string;
                  plainText: string;
                  richText: string;
                  lang: string;
                }[];
                fields: {
                  fieldName: string;
                  fieldType: string;
                }[];
              };
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          templateId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            contents: {
              /** Format: uuid */
              id: string;
              templateName: string;
              lang: string;
              subject: string;
              excerpt: string;
              plainText: string;
              richText: string;
            }[];
            variables: {
              name: string;
              type: string;
            }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          templateId: string;
        };
      };
      responses: {
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/organisation-settings/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                organisationSettingId: string;
                /** Format: uuid */
                userId: string;
                /** @default null */
                userProfileId: null | string;
                /** @default null */
                phoneNumber: null | string;
                /** @default null */
                emailAddress: null | string;
                organisationId: string;
                /**
                 * @default pending
                 * @enum {string}
                 */
                organisationInvitationStatus:
                  | "to_be_invited"
                  | "pending"
                  | "accepted"
                  | "declined";
                organisationInvitationSentAt?: string;
                organisationInvitationFeedbackAt?: string;
                organisationPreferredTransports: (
                  | "sms"
                  | "email"
                  | "lifeEvent"
                )[];
                /** @enum {string} */
                correlationQuality: "full" | "partial" | "not_related";
                /**
                 * @default pending
                 * @enum {string}
                 */
                userStatus: "to_be_invited" | "pending" | "disabled" | "active";
                details?: {
                  /** @default null */
                  publicIdentityId: null | string;
                  /** @default null */
                  firstName: null | string;
                  /** @default null */
                  lastName: null | string;
                  /** @default null */
                  birthDate: null | string;
                  /** @default null */
                  address: {
                    /** @default null */
                    city: null | string;
                    /** @default null */
                    zipCode: null | string;
                    /** @default null */
                    street: null | string;
                    /** @default null */
                    country: null | string;
                    /** @default null */
                    region: null | string;
                  } | null;
                  /** @default false */
                  collectedConsent: boolean;
                };
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/organisation-settings/{organisationSettingId}": {
    get: {
      parameters: {
        path: {
          organisationSettingId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                organisationSettingId: string;
                /** Format: uuid */
                userId: string;
                /** @default null */
                userProfileId: null | string;
                /** @default null */
                phoneNumber: null | string;
                /** @default null */
                emailAddress: null | string;
                organisationId: string;
                /**
                 * @default pending
                 * @enum {string}
                 */
                organisationInvitationStatus:
                  | "to_be_invited"
                  | "pending"
                  | "accepted"
                  | "declined";
                organisationInvitationSentAt?: string;
                organisationInvitationFeedbackAt?: string;
                organisationPreferredTransports: (
                  | "sms"
                  | "email"
                  | "lifeEvent"
                )[];
                /** @enum {string} */
                correlationQuality: "full" | "partial" | "not_related";
                /**
                 * @default pending
                 * @enum {string}
                 */
                userStatus: "to_be_invited" | "pending" | "disabled" | "active";
                details?: {
                  /** @default null */
                  publicIdentityId: null | string;
                  /** @default null */
                  firstName: null | string;
                  /** @default null */
                  lastName: null | string;
                  /** @default null */
                  birthDate: null | string;
                  /** @default null */
                  address: {
                    /** @default null */
                    city: null | string;
                    /** @default null */
                    zipCode: null | string;
                    /** @default null */
                    street: null | string;
                    /** @default null */
                    country: null | string;
                    /** @default null */
                    region: null | string;
                  } | null;
                  /** @default false */
                  collectedConsent: boolean;
                };
              };
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          organisationSettingId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /**
             * @default accepted
             * @enum {string}
             */
            invitationStatusFeedback: "accepted" | "declined";
            preferredTransports: string[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        202: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                organisationSettingId: string;
                /** Format: uuid */
                userId: string;
                /** @default null */
                userProfileId: null | string;
                /** @default null */
                phoneNumber: null | string;
                /** @default null */
                emailAddress: null | string;
                organisationId: string;
                /**
                 * @default pending
                 * @enum {string}
                 */
                organisationInvitationStatus:
                  | "to_be_invited"
                  | "pending"
                  | "accepted"
                  | "declined";
                organisationInvitationSentAt?: string;
                organisationInvitationFeedbackAt?: string;
                organisationPreferredTransports: (
                  | "sms"
                  | "email"
                  | "lifeEvent"
                )[];
                /** @enum {string} */
                correlationQuality: "full" | "partial" | "not_related";
                /**
                 * @default pending
                 * @enum {string}
                 */
                userStatus: "to_be_invited" | "pending" | "disabled" | "active";
                details?: {
                  /** @default null */
                  publicIdentityId: null | string;
                  /** @default null */
                  firstName: null | string;
                  /** @default null */
                  lastName: null | string;
                  /** @default null */
                  birthDate: null | string;
                  /** @default null */
                  address: {
                    /** @default null */
                    city: null | string;
                    /** @default null */
                    zipCode: null | string;
                    /** @default null */
                    street: null | string;
                    /** @default null */
                    country: null | string;
                    /** @default null */
                    region: null | string;
                  } | null;
                  /** @default false */
                  collectedConsent: boolean;
                };
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/user-imports/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                organisationId: string;
                /** Format: date-time */
                importedAt: string;
                /**
                 * @default api
                 * @enum {string}
                 */
                importChannel: "api" | "csv";
                /** @default 0 */
                retryCount: number;
                /** @default null */
                lastRetryAt: string | null;
                importId: string;
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
      };
    };
    /** @description If 'Content-Type' header contains 'multipart/form-data' it accepts a CSV file, otherwise an array of users to import */
    post: {
      requestBody?: {
        content: {
          "multipart/form-data": unknown;
          "application/json": unknown;
        };
      };
      responses: {
        /** @description Default Response */
        202: {
          content: never;
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/user-imports/{importId}": {
    get: {
      parameters: {
        query: {
          includeImportedData: boolean;
        };
        path: {
          importId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                organisationId: string;
                /** Format: date-time */
                importedAt: string;
                usersData: {
                  importIndex: number;
                  /** @default null */
                  phoneNumber: null | string;
                  /** @default null */
                  emailAddress: null | string;
                  /**
                   * @default pending
                   * @enum {string}
                   */
                  importStatus:
                    | "pending"
                    | "imported"
                    | "not_found"
                    | "error"
                    | "missing_contacts";
                  /** @default null */
                  importError?: null | string;
                  /** @default null */
                  relatedUserProfileId?: null | string;
                  /** @default null */
                  relatedUserId?: null | string;
                  tags?: string[];
                  /** @default null */
                  publicIdentityId: null | string;
                  /** @default null */
                  firstName: null | string;
                  /** @default null */
                  lastName: null | string;
                  /** @default null */
                  birthDate: null | string;
                  /** @default null */
                  address: {
                    /** @default null */
                    city: null | string;
                    /** @default null */
                    zipCode: null | string;
                    /** @default null */
                    street: null | string;
                    /** @default null */
                    country: null | string;
                    /** @default null */
                    region: null | string;
                  } | null;
                  /** @default false */
                  collectedConsent: boolean;
                }[];
                /**
                 * @default api
                 * @enum {string}
                 */
                importChannel: "api" | "csv";
                /** @default 0 */
                retryCount: number;
                /** @default null */
                lastRetryAt: string | null;
                importId: string;
              };
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/user-imports/template-download": {
    /** @description it will return a string containing the template with the csv that will be used to import users */
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "text/csv": string;
          };
        };
      };
    };
  };
  "/api/v1/users/": {
    get: {
      parameters: {
        query?: {
          organisationId?: string;
          search?: string;
          transports?: string;
          importId?: string;
          activeOnly?: boolean;
          offset?: number;
          limit?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** @default null */
                firstName: null | string;
                /** @default null */
                lastName: null | string;
                /** @default null */
                birthDate: null | string;
                /** @default null */
                lang: null | string;
                /** @default null */
                ppsn: null | string;
                /** Format: uuid */
                organisationSettingId: string;
                /** Format: uuid */
                userId: string;
                /** @default null */
                userProfileId: null | string;
                /** @default null */
                phoneNumber: null | string;
                /** @default null */
                emailAddress: null | string;
                organisationId: string;
                /**
                 * @default pending
                 * @enum {string}
                 */
                organisationInvitationStatus:
                  | "to_be_invited"
                  | "pending"
                  | "accepted"
                  | "declined";
                organisationInvitationSentAt?: string;
                organisationInvitationFeedbackAt?: string;
                organisationPreferredTransports: (
                  | "sms"
                  | "email"
                  | "lifeEvent"
                )[];
                /** @enum {string} */
                correlationQuality: "full" | "partial" | "not_related";
                /**
                 * @default pending
                 * @enum {string}
                 */
                userStatus: "to_be_invited" | "pending" | "disabled" | "active";
                details?: {
                  /** @default null */
                  publicIdentityId: null | string;
                  /** @default null */
                  firstName: null | string;
                  /** @default null */
                  lastName: null | string;
                  /** @default null */
                  birthDate: null | string;
                  /** @default null */
                  address: {
                    /** @default null */
                    city: null | string;
                    /** @default null */
                    zipCode: null | string;
                    /** @default null */
                    street: null | string;
                    /** @default null */
                    country: null | string;
                    /** @default null */
                    region: null | string;
                  } | null;
                  /** @default false */
                  collectedConsent: boolean;
                };
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/users/{userId}": {
    get: {
      parameters: {
        query?: {
          activeOnly?: boolean;
        };
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** @default null */
                firstName: null | string;
                /** @default null */
                lastName: null | string;
                /** @default null */
                birthDate: null | string;
                /** @default null */
                lang: null | string;
                /** @default null */
                ppsn: null | string;
                /** Format: uuid */
                organisationSettingId: string;
                /** Format: uuid */
                userId: string;
                /** @default null */
                userProfileId: null | string;
                /** @default null */
                phoneNumber: null | string;
                /** @default null */
                emailAddress: null | string;
                organisationId: string;
                /**
                 * @default pending
                 * @enum {string}
                 */
                organisationInvitationStatus:
                  | "to_be_invited"
                  | "pending"
                  | "accepted"
                  | "declined";
                organisationInvitationSentAt?: string;
                organisationInvitationFeedbackAt?: string;
                organisationPreferredTransports: (
                  | "sms"
                  | "email"
                  | "lifeEvent"
                )[];
                /** @enum {string} */
                correlationQuality: "full" | "partial" | "not_related";
                /**
                 * @default pending
                 * @enum {string}
                 */
                userStatus: "to_be_invited" | "pending" | "disabled" | "active";
                details?: {
                  /** @default null */
                  publicIdentityId: null | string;
                  /** @default null */
                  firstName: null | string;
                  /** @default null */
                  lastName: null | string;
                  /** @default null */
                  birthDate: null | string;
                  /** @default null */
                  address: {
                    /** @default null */
                    city: null | string;
                    /** @default null */
                    zipCode: null | string;
                    /** @default null */
                    street: null | string;
                    /** @default null */
                    country: null | string;
                    /** @default null */
                    region: null | string;
                  } | null;
                  /** @default false */
                  collectedConsent: boolean;
                };
              };
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/message-events/": {
    get: {
      parameters: {
        query?: {
          search?: string;
          offset?: number;
          limit?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                /** Format: uuid */
                eventId: string;
                /** Format: uuid */
                messageId: string;
                subject: string;
                receiverFullName: string;
                eventType: string;
                eventStatus: string;
                scheduledAt: string;
              }[];
              metadata?: {
                links?: {
                  self: {
                    href?: string;
                  };
                  next?: {
                    href?: string;
                  };
                  prev?: {
                    href?: string;
                  };
                  first: {
                    href?: string;
                  };
                  last: {
                    href?: string;
                  };
                  pages: {
                    [key: string]: {
                      href?: string;
                    };
                  };
                };
                totalCount?: number;
              };
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/message-events/{eventId}": {
    get: {
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: {
                eventStatus: string;
                eventType: string;
                data:
                  | {
                      messageId: string;
                      receiverFullName: string;
                      receiverPPSN: string;
                      subject: string;
                      lang: string;
                      excerpt: string;
                      richText: string;
                      plainText: string;
                      threadName: string;
                      transports: string[];
                      /** Format: date-time */
                      scheduledAt: string;
                      senderUserId: string;
                      senderFullName: string;
                      senderPPSN: string;
                      organisationName: string;
                      /**
                       * @default public
                       * @enum {string}
                       */
                      security: "confidential" | "public";
                      bypassConsent: boolean;
                    }
                  | {
                      messageId: string;
                      jobId: string;
                    }
                  | {
                      messageId: string;
                    };
                /** Format: date-time */
                createdAt: string;
              }[];
            };
          };
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
  "/api/v1/jobs/{id}": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        202: {
          content: never;
        };
        /** @description Default Response */
        "5XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
        /** @description Default Response */
        "4XX": {
          content: {
            "application/json": {
              code: string;
              detail: string;
              request_id: string;
              name: string;
              validation?: {
                fieldName: string;
                message: string;
              }[];
              validationContext?: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {};
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
