services:
  postgresql:
    extends:
      file: docker-compose.yaml
      service: postgresql

  maildev:
    extends:
      file: docker-compose.yaml
      service: maildev

  localstack:
    extends:
      file: docker-compose.yaml
      service: localstack

  scheduler_migrations:
    extends:
      file: docker-compose-scheduler.yaml
      service: scheduler_migrations

  scheduler:
    extends:
      file: docker-compose-scheduler.yaml
      service: scheduler

  logto:
    depends_on:
      postgres-logto:
        condition: service_healthy
    image: local-logto:latest
    build:
      context: ../logto
      dockerfile: Dockerfile  
    entrypoint:
      [
        "sh",
        "-c",
        "npm run cli db seed -- --swe && npm run cli db alteration deploy latest && npm run cli db ogcio -- --seeder-filepath=\"/etc/logto/packages/cli/src/commands/database/ogcio/ogcio-seeder.json\" && npm start"
      ]
    ports:
      - 3301:3301
      - 3302:3302
    environment:
      - TRUST_PROXY_HEADER=1
      - DB_URL=postgres://postgres:postgres@postgres-logto:5433/logto
      # Mandatory for GitPod to map host env to the container, thus GitPod can dynamically configure the public URL of Logto;
      # Or, you can leverage it for local testing.
      - ENDPOINT
      - ADMIN_ENDPOINT
      - PORT=3301
      - ADMIN_PORT=3302
      - USER_DEFAULT_ORGANIZATION_NAMES=OGCIO Seeded Org
      - USER_DEFAULT_ORGANIZATION_ROLE_NAMES=OGCIO Employee, OGCIO Manager
      - USER_DEFAULT_ROLE_NAMES=Payments Employee,User-Profile Employee

  postgres-logto:
    image: postgres:14-alpine
    user: postgres
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5433

  mock-auth-service:
    build:
      dockerfile: ./apps/auth-service/Dockerfile
    ports:
      - 3005:3005
    env_file:
      - ./apps/auth-service/.env
    environment:
      - PORT=3005

volumes:
  db:
    driver: local
