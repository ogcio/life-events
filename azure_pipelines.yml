trigger:
  - dev
  - uat
  - sta

pr:
  autoCancel: true
  branches:
    include:
      - "*"

parameters:
  - name: services
    type: object
    default: ["web", "mock-api", "payments", "messaging", "messaging-api", "payments-api", "profile", "profile-api"]

  - name: envBranches
    type: object
    default: ["dev", "sta", "uat"]

variables:
  - name: varFile
    ${{ if containsValue(parameters.envBranches, variables['Build.SourceBranchName']) }}:
      value: ${{ coalesce(variables.Build.SourceBranchName, 'dev') }}
    ${{ else }}:
      value: 'dev'

stages:
  - stage: securityScan
    displayName: Security Scans
    jobs:
      - job: gitLeaksScan
        #continueOnError: True
        pool:
          vmImage: "ubuntu-22.04"
        displayName: GitLeaks Scan
        steps:
          - task: DockerInstaller@0
            displayName: Docker Installer
            inputs:
              dockerVersion: 17.09.0-ce
              releaseType: stable
          - script: |
              docker pull zricethezav/gitleaks:v8.10.3
              docker run --rm -i -v "$(pwd):/src" zricethezav/gitleaks:v8.10.3 detect --source="/src" -c "src/.gitleaks.toml"  --no-git -v
            displayName: GitLeaks Scan
  - stage: BuildDeps
    displayName: Build service dependencies
    jobs:
      - template: pipeline-templates/build_dependencies.yml
  - ${{ each serviceName in parameters.services }}:
    - stage: Build_${{ replace(serviceName, '-', '_') }}
      displayName: Build ${{ serviceName }}
      variables:
      - template: pipeline-variables/${{ variables.varFile }}.yml
      dependsOn: 
        - securityScan
        - BuildDeps
      jobs:  
      - template: pipeline-templates/build_service.yml
        parameters:
          serviceName: ${{ serviceName }}
          ${{ if containsValue(parameters.envBranches, variables['Build.SourceBranchName']) }}:
            pushArtefacts: true
          ${{ else }}:
            pushArtefacts: false
    - stage: Push_${{ replace(serviceName, '-', '_') }}
      displayName: Push ${{ serviceName }} to ECR
      dependsOn: Build_${{ replace(serviceName, '-', '_') }}
      ${{ if containsValue(parameters.envBranches, variables['Build.SourceBranchName']) }}:
        condition: true
      ${{ else }}:
        condition: false
      variables:
      - template: pipeline-variables/${{ variables.varFile }}.yml
      jobs:
      - template: pipeline-templates/push_image.yml
        parameters:
          awsServiceConnection: ${{ variables.awsServiceConnection }}
          awsRegion: ${{ variables.awsRegion }}
          serviceName: ${{ serviceName }}
    - stage: Deploy_${{ replace(serviceName, '-', '_') }}
      displayName: Deploy to ECS - ${{ serviceName }}
      dependsOn: Push_${{ replace(serviceName, '-', '_') }}
      variables:
      - template: pipeline-variables/${{ variables.varFile }}.yml
      jobs:
      - template: pipeline-templates/deploy_ecs.yml
        parameters:
          awsServiceConnection: ${{ variables.awsServiceConnection }}
          awsRegion: ${{ variables.awsRegion }}
          serviceName: ${{ serviceName }}