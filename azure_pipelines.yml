trigger:
  - dev
  - uat
  - sta

pr:
  autoCancel: true
  branches:
    include:
      - "*"

parameters:
  - name: services
    type: object
    default: ["web", "mock-api", "payments", "messaging", "messaging-api", "payments-api", "profile", "profile-api"]

  - name: envBranches
    type: object
    default: ["refs/heads/dev", "refs/heads/sta", "refs/heads/uat"]

variables:
  - template: pipeline-variables/dev.yml
  - name: pushArtefacts
    value: ${{ containsValue(parameters.envBranches, variables['Build.SourceBranch']) }}

stages:
  - stage: securityScan
    displayName: Security Scans
    jobs:
      - job: gitLeaksScan
        #continueOnError: True
        pool:
          vmImage: "ubuntu-22.04"
        displayName: GitLeaks Scan
        steps:
          - task: DockerInstaller@0
            displayName: Docker Installer
            inputs:
              dockerVersion: 17.09.0-ce
              releaseType: stable
          - script: |
              docker pull zricethezav/gitleaks:v8.10.3
              docker run --rm -i -v "$(pwd):/src" zricethezav/gitleaks:v8.10.3 detect --source="/src" -c "src/.gitleaks.toml"  --no-git -v
            displayName: GitLeaks Scan
  - stage: BuildDeps
    displayName: Build service dependencies
    jobs:
      - template: pipeline-templates/build_dependencies.yml
  - ${{ each serviceName in parameters.services }}:
    - stage: Build_${{ replace(serviceName, '-', '_') }}
      displayName: Build ${{ serviceName }}
      dependsOn: 
        - securityScan
        - BuildDeps
      jobs:  
      - template: pipeline-templates/build_service.yml
        parameters:
          serviceName: ${{ serviceName }}
    - stage: Push_${{ replace(serviceName, '-', '_') }}
      displayName: Push ${{ serviceName }} to ECR
      dependsOn: Build_${{ replace(serviceName, '-', '_') }}
      condition: and(succeeded(), eq(variables.pushArtefacts, true))
      jobs:
      - template: pipeline-templates/push_image.yml
        parameters:
          awsServiceConnection: $(awsServiceConnection)
          awsRegion: $(awsRegion)
          serviceName: ${{ serviceName }}
  - stage: Deploy_to_ECS
    displayName: Deploy all services to ECS
    condition: and(succeeded(), eq(variables.pushArtefacts, true))
    dependsOn: 
    - ${{ each serviceName in parameters.services }}:
      - Push_${{ replace(serviceName, '-', '_') }}
    jobs:
    - job: Validate
      displayName: Wait for deployment approval
      pool: server
      timeoutInMinutes: 20
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 5
        inputs:
          instructions: 'Please validate the deployment of $(Build.SourceBranchName)'
          onTimeout: 'reject'
    - ${{ each serviceName in parameters.services }}:
      - template: pipeline-templates/deploy_ecs.yml
        parameters:
          awsServiceConnection: $(awsServiceConnection)
          awsRegion: $(awsRegion)