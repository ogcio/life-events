trigger:
  - dev
  - uat
  - sta

pr:
  autoCancel: true
  branches:
    include:
      - "*"

parameters:
  - name: services
    type: object
    default: ["web", "mock-api", "payments", "messaging", "messaging-api", "payments-api", "profile", "profile-api", "timeline-api", "auth-service", "scheduler-api", "home", "forms"]

  - name: buildBranches
    type: object
    default: ["dev", "sta", "uat"]

  - name: validEnvironments
    type: object
    displayName: List of valid environments to deploy (do not change)
    default: ['dev','sta', 'uat', 'prd']

variables:
  - name: pushArtefacts
    value: ${{ containsValue(parameters.buildBranches, variables['Build.SourceBranchName']) }}
  - ${{ if containsValue(parameters.validEnvironments ,variables['Build.SourceBranchName']) }}:
    - template: pipeline-variables/${{ coalesce(variables['Build.SourceBranchName'], 'fallback') }}.yml
  - ${{ else }}:
    - template: pipeline-variables/dev.yml

stages:
  - stage: securityScan
    displayName: Security Scans
    jobs:
      - job: gitLeaksScan
        pool:
          vmImage: "ubuntu-latest"
        displayName: GitLeaks Scan
        steps:
          - task: DockerInstaller@0
            displayName: Docker Installer
            inputs:
              dockerVersion: 17.09.0-ce
              releaseType: stable
          - script: |
              docker run --rm -i -v "$(pwd):/src" zricethezav/gitleaks:v8.18.4 detect --source="/src" -c "src/.gitleaks.toml"  --no-git -v
            displayName: GitLeaks Scan
  - stage: BuildDeps
    displayName: Build service dependencies
    jobs:
      - template: pipeline-templates/build_dependencies.yml
  - ${{ each serviceName in parameters.services }}:
    - stage: Build_${{ replace(serviceName, '-', '_') }}
      displayName: Build ${{ serviceName }}
      dependsOn: 
        - securityScan
        - BuildDeps
      jobs:  
      - template: pipeline-templates/build_service.yml
        parameters:
          serviceName: ${{ serviceName }}
          pushArtefacts: ${{ variables.pushArtefacts }}
    - stage: Push_${{ replace(serviceName, '-', '_') }}
      displayName: Push ${{ serviceName }} to ECR
      dependsOn: Build_${{ replace(serviceName, '-', '_') }}
      condition: ${{ variables.pushArtefacts }}
      jobs:
      - template: pipeline-templates/push_image.yml
        parameters:
          awsServiceConnection: ${{ variables.awsServiceConnection }}
          awsRegion: ${{ variables.awsRegion }}
          serviceName: ${{ serviceName }}
    - stage: Deploy_${{ replace(serviceName, '-', '_') }}
      displayName: Deploy to ECS - ${{ serviceName }}
      dependsOn: Push_${{ replace(serviceName, '-', '_') }}
      jobs:
      - template: pipeline-templates/deploy_ecs.yml
        parameters:
          awsServiceConnection: ${{ variables.awsServiceConnection }}
          awsRegion: ${{ variables.awsRegion }}
          serviceName: ${{ serviceName }}